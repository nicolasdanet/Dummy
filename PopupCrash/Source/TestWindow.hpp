
#pragma once

#include <JuceHeader.h>
#include "Window.hpp"
#include "TestComponent.hpp"

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

class TestWindow : public BaseWindow {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    explicit TestWindow () : BaseWindow ("Crash")
    {
        content_ = std::make_unique<TestComponent>();
        
        setContentNonOwned (content_.get(), true);
        
        setTopLeftPosition (100, 100); makeVisible();
    }

    ~TestWindow() = default;
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

public:
    void closeButtonPressed() override;

private:
    std::unique_ptr<TestComponent> content_;
    
private:
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (TestWindow)
};
    
// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
